name: Terraform Deployment

on:
  workflow_dispatch:

  pull_request:
    paths:
      - 'tf/**'
  push:
    branches:
      - main
    paths:
      - 'tf/**'

# AWSとOIDC連携するには必要な設定らしい
permissions:
  id-token: write
  contents: read

jobs:
  terraform-plan:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ap-northeast-1

      - name: Write Terraform variables file
        run: echo "${{ secrets.TERRAFORM_VARS }}" > terraform.tfvars

      - name: Initialize Terraform
        run: terraform init

      - name: Run Terraform Plan
        run: terraform plan -var-file=terraform.tfvars -out=tfplan

      - name: Upload Terraform Plan as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: tfplan

  terraform-apply:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ap-northeast-1

      - name: Write Terraform variables file
        run: echo "${{ secrets.TERRAFORM_VARS }}" > terraform.tfvars

      - name: Initialize Terraform
        run: terraform init

      - name: Apply Terraform Plan
        run: terraform apply -var-file=terraform.tfvars -auto-approve