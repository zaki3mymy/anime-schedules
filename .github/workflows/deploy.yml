name: Terraform Deployment

on:
  workflow_dispatch:

  pull_request:
    paths:
      - 'tf/**'
  push:
    branches:
      - main
    paths:
      - 'tf/**'

# AWSとOIDC連携するには必要な設定らしい
permissions:
  id-token: write
  contents: read

jobs:
  terraform-plan:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ap-northeast-1
          # stateの取得に必要なポリシーを一時的に付与する
          inline-session-policy: |
            {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject"
                  ],
                  "Resource": [
                    "arn:aws:s3:::${{ vars.S3_BUCKET_FOR_STATE }}/*"
                  ]
                }
              ]
            }

      - name: Write Terraform variables file
        working-directory: tf
        # secretsに改行を含む場合はbase64エンコードしておく必要があるっぽい
        # https://zenn.dev/coedo/scraps/d6e1efdf5311c7
        run: echo -n ${{ secrets.TERRAFORM_VARS }} | base64 --decode > terraform.tfvars

      - name: Initialize Terraform
        working-directory: tf
        run: terraform init -backend-config="bucket=${{ vars.S3_BUCKET_FOR_STATE }}" -backend-config="key=anime-schedules/terraform.tfstate" -backend-config="region=ap-northeast-1"

      - name: Run Terraform Plan
        working-directory: tf
        run: terraform plan -var-file=terraform.tfvars -out=tfplan

      - name: Upload Terraform Plan as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: tf/tfplan

  terraform-apply:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ap-northeast-1
          # デプロイに必要なポリシーを一時的に付与する
          inline-session-policy: |
            {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:ListBucket",
                    "s3:GetObject",
                    "s3:PutObject",
                    "s3:DeleteObject",
                    "iam:CreateRole",
                    "iam:DeleteRole",
                    "iam:UpdateRole",
                    "iam:AttachRolePolicy",
                    "iam:DetachRolePolicy",
                    "iam:PassRole",
                    "iam:CreatePolicy",
                    "iam:DeletePolicy",
                    "iam:UpdatePolicy",
                    "lambda:CreateFunction",
                    "lambda:DeleteFunction",
                    "lambda:UpdateFunctionCode",
                    "lambda:UpdateFunctionConfiguration",
                    "lambda:AddPermission",
                    "lambda:RemovePermission",
                    "logs:CreateLogGroup",
                    "logs:DeleteLogGroup",
                    "logs:PutRetentionPolicy",
                    "events:PutRule",
                    "events:DeleteRule",
                    "events:PutTargets",
                    "events:RemoveTargets",
                    "resource-groups:CreateGroup",
                    "resource-groups:DeleteGroup",
                    "resource-groups:Tag",
                    "resource-groups:Untag",
                    "resource-groups:UpdateGroupQuery"
                  ],
                  "Resource": [
                    "*"
                  ]
                }
              ]
            }

      - name: Write Terraform variables file
        working-directory: tf
        # secretsに改行を含む場合はbase64エンコードしておく必要があるっぽい
        # https://zenn.dev/coedo/scraps/d6e1efdf5311c7
        run: echo -n ${{ secrets.TERRAFORM_VARS }} | base64 --decode > terraform.tfvars

      - name: Initialize Terraform
        working-directory: tf
        run: terraform init -backend-config="bucket=${{ vars.S3_BUCKET_FOR_STATE }}" -backend-config="key=anime-schedules/terraform.tfstate" -backend-config="region=ap-northeast-1"

      - name: Apply Terraform Plan
        working-directory: tf
        run: terraform apply -var-file=terraform.tfvars -auto-approve
